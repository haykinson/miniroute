// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.10.0
// source: service.proto

package main

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RecordDetectedFlightRequest_Direction int32

const (
	RecordDetectedFlightRequest_UNKNOWN RecordDetectedFlightRequest_Direction = 0
	RecordDetectedFlightRequest_NORTH   RecordDetectedFlightRequest_Direction = 1
	RecordDetectedFlightRequest_SOUTH   RecordDetectedFlightRequest_Direction = 2
)

// Enum value maps for RecordDetectedFlightRequest_Direction.
var (
	RecordDetectedFlightRequest_Direction_name = map[int32]string{
		0: "UNKNOWN",
		1: "NORTH",
		2: "SOUTH",
	}
	RecordDetectedFlightRequest_Direction_value = map[string]int32{
		"UNKNOWN": 0,
		"NORTH":   1,
		"SOUTH":   2,
	}
)

func (x RecordDetectedFlightRequest_Direction) Enum() *RecordDetectedFlightRequest_Direction {
	p := new(RecordDetectedFlightRequest_Direction)
	*p = x
	return p
}

func (x RecordDetectedFlightRequest_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecordDetectedFlightRequest_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_service_proto_enumTypes[0].Descriptor()
}

func (RecordDetectedFlightRequest_Direction) Type() protoreflect.EnumType {
	return &file_service_proto_enumTypes[0]
}

func (x RecordDetectedFlightRequest_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecordDetectedFlightRequest_Direction.Descriptor instead.
func (RecordDetectedFlightRequest_Direction) EnumDescriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0, 0}
}

type RecordDetectedFlightRequest_Corridor int32

const (
	RecordDetectedFlightRequest_CORRIDOR_UNKNOWN   RecordDetectedFlightRequest_Corridor = 0
	RecordDetectedFlightRequest_CORRIDOR_SFRA      RecordDetectedFlightRequest_Corridor = 1
	RecordDetectedFlightRequest_CORRIDOR_MINIROUTE RecordDetectedFlightRequest_Corridor = 2
)

// Enum value maps for RecordDetectedFlightRequest_Corridor.
var (
	RecordDetectedFlightRequest_Corridor_name = map[int32]string{
		0: "CORRIDOR_UNKNOWN",
		1: "CORRIDOR_SFRA",
		2: "CORRIDOR_MINIROUTE",
	}
	RecordDetectedFlightRequest_Corridor_value = map[string]int32{
		"CORRIDOR_UNKNOWN":   0,
		"CORRIDOR_SFRA":      1,
		"CORRIDOR_MINIROUTE": 2,
	}
)

func (x RecordDetectedFlightRequest_Corridor) Enum() *RecordDetectedFlightRequest_Corridor {
	p := new(RecordDetectedFlightRequest_Corridor)
	*p = x
	return p
}

func (x RecordDetectedFlightRequest_Corridor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecordDetectedFlightRequest_Corridor) Descriptor() protoreflect.EnumDescriptor {
	return file_service_proto_enumTypes[1].Descriptor()
}

func (RecordDetectedFlightRequest_Corridor) Type() protoreflect.EnumType {
	return &file_service_proto_enumTypes[1]
}

func (x RecordDetectedFlightRequest_Corridor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecordDetectedFlightRequest_Corridor.Descriptor instead.
func (RecordDetectedFlightRequest_Corridor) EnumDescriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0, 1}
}

type RecordDetectedFlightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Callsign  string                                `protobuf:"bytes,1,opt,name=callsign,proto3" json:"callsign,omitempty"`
	Direction RecordDetectedFlightRequest_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=RecordDetectedFlightRequest_Direction" json:"direction,omitempty"`
	Timestamp *timestamp.Timestamp                  `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Corridor  RecordDetectedFlightRequest_Corridor  `protobuf:"varint,4,opt,name=corridor,proto3,enum=RecordDetectedFlightRequest_Corridor" json:"corridor,omitempty"`
}

func (x *RecordDetectedFlightRequest) Reset() {
	*x = RecordDetectedFlightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordDetectedFlightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordDetectedFlightRequest) ProtoMessage() {}

func (x *RecordDetectedFlightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordDetectedFlightRequest.ProtoReflect.Descriptor instead.
func (*RecordDetectedFlightRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *RecordDetectedFlightRequest) GetCallsign() string {
	if x != nil {
		return x.Callsign
	}
	return ""
}

func (x *RecordDetectedFlightRequest) GetDirection() RecordDetectedFlightRequest_Direction {
	if x != nil {
		return x.Direction
	}
	return RecordDetectedFlightRequest_UNKNOWN
}

func (x *RecordDetectedFlightRequest) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *RecordDetectedFlightRequest) GetCorridor() RecordDetectedFlightRequest_Corridor {
	if x != nil {
		return x.Corridor
	}
	return RecordDetectedFlightRequest_CORRIDOR_UNKNOWN
}

type RecordDetectedFlightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RecordDetectedFlightResponse) Reset() {
	*x = RecordDetectedFlightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordDetectedFlightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordDetectedFlightResponse) ProtoMessage() {}

func (x *RecordDetectedFlightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordDetectedFlightResponse.ProtoReflect.Descriptor instead.
func (*RecordDetectedFlightResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

type HeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp    *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MessageCount uint64               `protobuf:"varint,2,opt,name=message_count,json=messageCount,proto3" json:"message_count,omitempty"`
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2}
}

func (x *HeartbeatRequest) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *HeartbeatRequest) GetMessageCount() uint64 {
	if x != nil {
		return x.MessageCount
	}
	return 0
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{3}
}

var File_service_proto protoreflect.FileDescriptor

var file_service_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xf9, 0x02, 0x0a, 0x1b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x44, 0x0a, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x41, 0x0a, 0x08,
	0x63, 0x6f, 0x72, 0x72, 0x69, 0x64, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x46,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x72,
	0x72, 0x69, 0x64, 0x6f, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x72, 0x72, 0x69, 0x64, 0x6f, 0x72, 0x22,
	0x2e, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x4f, 0x52,
	0x54, 0x48, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x10, 0x02, 0x22,
	0x4b, 0x0a, 0x08, 0x43, 0x6f, 0x72, 0x72, 0x69, 0x64, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x10, 0x43,
	0x4f, 0x52, 0x52, 0x49, 0x44, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x52, 0x52, 0x49, 0x44, 0x4f, 0x52, 0x5f, 0x53, 0x46,
	0x52, 0x41, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x52, 0x52, 0x49, 0x44, 0x4f, 0x52,
	0x5f, 0x4d, 0x49, 0x4e, 0x49, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x10, 0x02, 0x22, 0x1e, 0x0a, 0x1c,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x46, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x71, 0x0a, 0x10,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x13, 0x0a, 0x11, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0x98, 0x01, 0x0a, 0x0d, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x14, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x46,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x46, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x48,
	0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x11, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x08, 0x5a, 0x06, 0x2e, 0x3b, 0x6d, 0x61, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData = file_service_proto_rawDesc
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_proto_rawDescData)
	})
	return file_service_proto_rawDescData
}

var file_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_service_proto_goTypes = []interface{}{
	(RecordDetectedFlightRequest_Direction)(0), // 0: RecordDetectedFlightRequest.Direction
	(RecordDetectedFlightRequest_Corridor)(0),  // 1: RecordDetectedFlightRequest.Corridor
	(*RecordDetectedFlightRequest)(nil),        // 2: RecordDetectedFlightRequest
	(*RecordDetectedFlightResponse)(nil),       // 3: RecordDetectedFlightResponse
	(*HeartbeatRequest)(nil),                   // 4: HeartbeatRequest
	(*HeartbeatResponse)(nil),                  // 5: HeartbeatResponse
	(*timestamp.Timestamp)(nil),                // 6: google.protobuf.Timestamp
}
var file_service_proto_depIdxs = []int32{
	0, // 0: RecordDetectedFlightRequest.direction:type_name -> RecordDetectedFlightRequest.Direction
	6, // 1: RecordDetectedFlightRequest.timestamp:type_name -> google.protobuf.Timestamp
	1, // 2: RecordDetectedFlightRequest.corridor:type_name -> RecordDetectedFlightRequest.Corridor
	6, // 3: HeartbeatRequest.timestamp:type_name -> google.protobuf.Timestamp
	2, // 4: FlightService.RecordDetectedFlight:input_type -> RecordDetectedFlightRequest
	4, // 5: FlightService.Heartbeat:input_type -> HeartbeatRequest
	3, // 6: FlightService.RecordDetectedFlight:output_type -> RecordDetectedFlightResponse
	5, // 7: FlightService.Heartbeat:output_type -> HeartbeatResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordDetectedFlightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordDetectedFlightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		EnumInfos:         file_service_proto_enumTypes,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_rawDesc = nil
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FlightServiceClient is the client API for FlightService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FlightServiceClient interface {
	RecordDetectedFlight(ctx context.Context, in *RecordDetectedFlightRequest, opts ...grpc.CallOption) (*RecordDetectedFlightResponse, error)
	Heartbeat(ctx context.Context, in *HeartbeatRequest, opts ...grpc.CallOption) (*HeartbeatResponse, error)
}

type flightServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFlightServiceClient(cc grpc.ClientConnInterface) FlightServiceClient {
	return &flightServiceClient{cc}
}

func (c *flightServiceClient) RecordDetectedFlight(ctx context.Context, in *RecordDetectedFlightRequest, opts ...grpc.CallOption) (*RecordDetectedFlightResponse, error) {
	out := new(RecordDetectedFlightResponse)
	err := c.cc.Invoke(ctx, "/FlightService/RecordDetectedFlight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *flightServiceClient) Heartbeat(ctx context.Context, in *HeartbeatRequest, opts ...grpc.CallOption) (*HeartbeatResponse, error) {
	out := new(HeartbeatResponse)
	err := c.cc.Invoke(ctx, "/FlightService/Heartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FlightServiceServer is the server API for FlightService service.
type FlightServiceServer interface {
	RecordDetectedFlight(context.Context, *RecordDetectedFlightRequest) (*RecordDetectedFlightResponse, error)
	Heartbeat(context.Context, *HeartbeatRequest) (*HeartbeatResponse, error)
}

// UnimplementedFlightServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFlightServiceServer struct {
}

func (*UnimplementedFlightServiceServer) RecordDetectedFlight(context.Context, *RecordDetectedFlightRequest) (*RecordDetectedFlightResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecordDetectedFlight not implemented")
}
func (*UnimplementedFlightServiceServer) Heartbeat(context.Context, *HeartbeatRequest) (*HeartbeatResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Heartbeat not implemented")
}

func RegisterFlightServiceServer(s *grpc.Server, srv FlightServiceServer) {
	s.RegisterService(&_FlightService_serviceDesc, srv)
}

func _FlightService_RecordDetectedFlight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecordDetectedFlightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlightServiceServer).RecordDetectedFlight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FlightService/RecordDetectedFlight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlightServiceServer).RecordDetectedFlight(ctx, req.(*RecordDetectedFlightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FlightService_Heartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartbeatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlightServiceServer).Heartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FlightService/Heartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlightServiceServer).Heartbeat(ctx, req.(*HeartbeatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FlightService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "FlightService",
	HandlerType: (*FlightServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RecordDetectedFlight",
			Handler:    _FlightService_RecordDetectedFlight_Handler,
		},
		{
			MethodName: "Heartbeat",
			Handler:    _FlightService_Heartbeat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
